import React, { useState } from 'react';

function OpenRouter() {
  const [selectedModel, setSelectedModel] = useState('gpt-3.5-turbo');
  const [message, setMessage] = useState('');
  const [conversation, setConversation] = useState([]);
  const [loading, setLoading] = useState(false);
  const [apiKey, setApiKey] = useState('');

  const models = [
    { id: 'gpt-3.5-turbo', name: 'GPT-3.5 Turbo', provider: 'OpenAI', cost: '$0.001/1K tokens' },
    { id: 'gpt-4', name: 'GPT-4', provider: 'OpenAI', cost: '$0.03/1K tokens' },
    { id: 'claude-3-haiku', name: 'Claude 3 Haiku', provider: 'Anthropic', cost: '$0.00025/1K tokens' },
    { id: 'claude-3-sonnet', name: 'Claude 3 Sonnet', provider: 'Anthropic', cost: '$0.003/1K tokens' },
    { id: 'llama-2-70b-chat', name: 'Llama 2 70B', provider: 'Meta', cost: '$0.0007/1K tokens' },
    { id: 'mixtral-8x7b-instruct', name: 'Mixtral 8x7B', provider: 'Mistral AI', cost: '$0.0002/1K tokens' }
  ];

  const sendMessage = async () => {
    if (!message.trim()) return;

    const userMessage = { role: 'user', content: message };
    setConversation(prev => [...prev, userMessage]);
    setMessage('');
    setLoading(true);

    // Simulate OpenRouter API call
    setTimeout(() => {
      const botResponse = {
        role: 'assistant',
        content: `This is a simulated response from ${models.find(m => m.id === selectedModel)?.name}. In a real implementation, this would connect to OpenRouter's API with your API key to access various AI models. The response would be generated by the selected model: ${selectedModel}.`
      };
      setConversation(prev => [...prev, botResponse]);
      setLoading(false);
    }, 1500);
  };

  const clearConversation = () => {
    setConversation([]);
  };

  const handleKeyPress = (e) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      sendMessage();
    }
  };

  return (
    <div className="app-container" style={{ padding: '100px 20px 20px' }}>
      <div className="form-container" style={{ maxWidth: '900px' }}>
        <h1 style={{ textAlign: 'center', marginBottom: '1rem', color: 'var(--text-primary)', fontSize: '2.5rem', fontWeight: '700' }}>
          ðŸ”— OpenRouter Chat
        </h1>
        <p style={{ textAlign: 'center', marginBottom: '2rem', color: 'var(--text-secondary)' }}>
          Access multiple AI models through a single API endpoint
        </p>

        <div style={{ marginBottom: '2rem', padding: '1rem', background: 'rgba(255, 255, 255, 0.1)', borderRadius: '10px' }}>
          <div className="form-group">
            <label className="form-label">OpenRouter API Key:</label>
            <input
              type="password"
              className="form-input"
              value={apiKey}
              onChange={(e) => setApiKey(e.target.value)}
              placeholder="Enter your OpenRouter API key"
            />
            <div style={{ fontSize: '0.8rem', color: 'rgba(255, 255, 255, 0.7)', marginTop: '0.5rem' }}>
              Get your API key from <a href="https://openrouter.ai" target="_blank" rel="noopener noreferrer" style={{ color: '#4ecdc4' }}>openrouter.ai</a>
            </div>
          </div>
        </div>

        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', gap: '1rem', marginBottom: '2rem' }}>
          <div className="form-group">
            <label className="form-label">Select AI Model:</label>
            <select
              className="form-input"
              value={selectedModel}
              onChange={(e) => setSelectedModel(e.target.value)}
            >
              {models.map((model) => (
                <option key={model.id} value={model.id}>
                  {model.name} ({model.provider})
                </option>
              ))}
            </select>
          </div>
        </div>

        <div style={{ marginBottom: '2rem' }}>
          <h4 style={{ marginBottom: '1rem' }}>Available Models:</h4>
          <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', gap: '1rem' }}>
            {models.map((model) => (
              <div
                key={model.id}
                style={{
                  padding: '1rem',
                  background: selectedModel === model.id ? 'rgba(102, 126, 234, 0.2)' : 'rgba(255, 255, 255, 0.1)',
                  borderRadius: '10px',
                  border: selectedModel === model.id ? '2px solid #667eea' : '1px solid rgba(255, 255, 255, 0.2)',
                  cursor: 'pointer',
                  transition: 'all 0.3s ease'
                }}
                onClick={() => setSelectedModel(model.id)}
              >
                <h5 style={{ margin: '0 0 0.5rem 0', color: selectedModel === model.id ? '#667eea' : '#333' }}>
                  {model.name}
                </h5>
                <p style={{ margin: '0 0 0.5rem 0', fontSize: '0.9rem', color: '#666' }}>
                  {model.provider}
                </p>
                <p style={{ margin: 0, fontSize: '0.8rem', color: '#888' }}>
                  {model.cost}
                </p>
              </div>
            ))}
          </div>
        </div>

        <div style={{ height: '400px', marginBottom: '1rem', background: 'rgba(255, 255, 255, 0.1)', borderRadius: '15px', padding: '1rem', overflowY: 'auto' }}>
          {conversation.length === 0 ? (
            <div style={{ textAlign: 'center', color: '#666', marginTop: '2rem' }}>
              <p>Select a model and start chatting!</p>
              <p style={{ fontSize: '0.9rem' }}>Each model has different strengths and pricing.</p>
            </div>
          ) : (
            conversation.map((msg, index) => (
              <div key={index} className={`message ${msg.role === 'user' ? 'user' : 'bot'}`}>
                <strong>{msg.role === 'user' ? 'You' : models.find(m => m.id === selectedModel)?.name}:</strong>
                <div style={{ marginTop: '0.5rem' }}>{msg.content}</div>
              </div>
            ))
          )}
          {loading && (
            <div className="message bot">
              <strong>{models.find(m => m.id === selectedModel)?.name}:</strong>
              <div style={{ marginTop: '0.5rem', display: 'flex', alignItems: 'center', gap: '10px' }}>
                <div className="loading"></div>
                Thinking...
              </div>
            </div>
          )}
        </div>

        <div className="chat-input-container">
          <textarea
            className="chat-input"
            value={message}
            onChange={(e) => setMessage(e.target.value)}
            onKeyPress={handleKeyPress}
            placeholder={`Ask ${models.find(m => m.id === selectedModel)?.name} anything...`}
            rows="2"
            style={{ resize: 'vertical', minHeight: '50px' }}
          />
          <button
            onClick={sendMessage}
            disabled={loading || !message.trim()}
            className="btn-primary"
            style={{ height: 'fit-content', alignSelf: 'flex-end' }}
          >
            Send
          </button>
        </div>

        <div style={{ display: 'flex', justifyContent: 'center', marginTop: '1rem' }}>
          <button onClick={clearConversation} className="btn-secondary">
            Clear Chat
          </button>
        </div>

        <div style={{ marginTop: '2rem', padding: '1rem', background: 'rgba(255, 255, 255, 0.1)', borderRadius: '10px', fontSize: '0.9rem' }}>
          <strong>ðŸš€ OpenRouter Benefits:</strong>
          <ul style={{ marginTop: '0.5rem', paddingLeft: '1.5rem' }}>
            <li><strong>Unified API:</strong> Access multiple AI models with one API key</li>
            <li><strong>Cost Optimization:</strong> Compare and choose models based on price/performance</li>
            <li><strong>No Vendor Lock-in:</strong> Switch between providers seamlessly</li>
            <li><strong>Load Balancing:</strong> Automatic failover and rate limit handling</li>
          </ul>
          
          <div style={{ marginTop: '1rem' }}>
            <strong>ðŸ”§ Implementation Steps:</strong>
            <ol style={{ marginTop: '0.5rem', paddingLeft: '1.5rem' }}>
              <li>Sign up at <a href="https://openrouter.ai" target="_blank" rel="noopener noreferrer" style={{ color: '#4ecdc4' }}>openrouter.ai</a></li>
              <li>Get your API key from the dashboard</li>
              <li>Set up backend endpoints to proxy requests</li>
              <li>Implement proper error handling and rate limiting</li>
            </ol>
          </div>
        </div>
      </div>
    </div>
  );
}

export default OpenRouter;